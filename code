<div id="step-content" style="font-family: Arial, sans-serif; background-color: #333; color: #fff; padding: 20px;">
    <div id="step1" class="step active">
        <h2>Выбери тип задачи</h2>
        <button onclick="selectTaskType('обработка', this)" class="square-button">Обработка</button>
        <button onclick="selectTaskType('шмот', this)" class="square-button">Шмот</button>
        <button onclick="selectTaskType('hard шмот', this)" class="square-button">Хард шмот</button>
        <button onclick="nextStep(1)" style="padding: 10px 20px; margin: 10px; background-color: #666; color: white; border: none; cursor: pointer;">Далее</button>
    </div>

    <div id="step2" class="step">
        <h2>Выбери тип работ:</h2>
        <label><input type="checkbox" value="1" onchange="updateStars()"> Трассировка</label><br>
        <label><input type="checkbox" value="3" onchange="updateStars()"> Отрисовка в векторе</label><br>
        <label><input type="checkbox" value="4" onchange="updateStars()"> Макет по ТЗ</label><br>
        <label><input type="checkbox" value="5" onchange="updateStars()"> Макет по ХЗ - HARD</label><br>
        <label><input type="checkbox" value="2" onchange="updateStars()"> Подготовка к печати</label><br>

        <button onclick="prevStep(2)" style="padding: 10px 20px; margin: 10px; background-color: #666; color: white; border: none; cursor: pointer;">Назад</button>
        <button onclick="nextStep(2)" style="padding: 10px 20px; margin: 10px; background-color: #666; color: white; border: none; cursor: pointer;">Далее</button>
    </div>

    <div id="step3" class="step">
        <h2>Выбери количество вариантов:</h2>
        <label><input type="radio" name="variants" value="0" onchange="updateStars()"> 1 ВАРИАНТ</label><br>
        <label><input type="radio" name="variants" value="1" onchange="updateStars()"> 2 ВАРИАНТА</label><br>
        <label><input type="radio" name="variants" value="2" onchange="updateStars()"> 3 ВАРИАНТА</label><br>
        
        <button onclick="prevStep(3)" style="padding: 10px 20px; margin: 10px; background-color: #666; color: white; border: none; cursor: pointer;">Назад</button>
        <button onclick="nextStep(3)" style="padding: 10px 20px; margin: 10px; background-color: #666; color: white; border: none; cursor: pointer;">Далее</button>
    </div>

    <div id="step4" class="step">
        <h2>Способ печати:</h2>
        <label><input type="checkbox" value="1" onchange="updateStars()"> Печать на пленке</label><br>
        <label><input type="checkbox" value="1" onchange="updateStars()"> ДТФ печать</label><br>
        <label><input type="checkbox" value="1" onchange="updateStars()"> Шелкография</label><br>
        <label><input type="checkbox" value="0" onchange="updateStars()"> Без печати</label><br>
        
        <button onclick="prevStep(4)" style="padding: 10px 20px; margin: 10px; background-color: #666; color: white; border: none; cursor: pointer;">Назад</button>
        <button onclick="nextStep(4)" style="padding: 10px 20px; margin: 10px; background-color: #666; color: white; border: none; cursor: pointer;">Далее</button>
    </div>

    <div id="step5" class="step">
        <h2>Допечатная подготовка:</h2>
        <label><input type="checkbox" value="1" onchange="updateStars()"> Контур реза</label><br>
        <label><input type="checkbox" value="1" onchange="updateStars()"> Раскладка на тираж</label><br>
        <label><input type="checkbox" value="1" onchange="updateStars()"> Верстка разных размеров</label><br>
        
        <button onclick="prevStep(5)" style="padding: 10px 20px; margin: 10px; background-color: #666; color: white; border: none; cursor: pointer;">Назад</button>
        <button onclick="nextStep(5)" style="padding: 10px 20px; margin: 10px; background-color: #666; color: white; border: none; cursor: pointer;">Далее</button>
    </div>

    <div id="step6" class="step">
        <h2>Комментарий</h2>
        <textarea id="comment" placeholder="Опиши кратко задачу" style="width: 100%; padding: 10px; background-color: #444; color: #fff; border: 1px solid #555;"></textarea>
        
        <h2>Подробное ТЗ</h2>
        <textarea id="detailedTask" placeholder="Опиши задачу подробно" style="width: 100%; padding: 10px; background-color: #444; color: #fff; border: 1px solid #555;"></textarea>
        
        <h2>Размеры</h2>
        <input id="sizes" type="text" placeholder="__х__ / __х__ / __х__" style="width: 100%; padding: 10px; background-color: #444; color: #fff; border: 1px solid #555;"/>
        
        <button onclick="prevStep(6)" style="padding: 10px 20px; margin: 10px; background-color: #666; color: white; border: none; cursor: pointer;">Назад</button>
        <button onclick="finishOrder()" style="padding: 10px 20px; margin: 10px; background-color: #666; color: white; border: none; cursor: pointer;">Отправить заказ</button>
    </div>

    <div id="result" class="step">
        <h2>Сложность вашего заказа</h2>
        <p id="stars"></p>
        <button onclick="sendOrder()" style="padding: 10px 20px; margin: 10px; background-color: #666; color: white; border: none; cursor: pointer;">Отправить заказ</button>
    </div>
</div>

<script>
    let currentStep = 1;
    let totalStars = 0;
    let selectedTaskType = '';

    function selectTaskType(type, button) {
        selectedTaskType = type;
        
        // Удаляем выделение со всех кнопок
        document.querySelectorAll('#step1 .square-button').forEach(btn => {
            btn.style.backgroundColor = '#666'; // Цвет по умолчанию
        });
        
        // Выделяем выбранную кнопку
        button.style.backgroundColor = '#2ecc71'; // Салатовый цвет
    }

    function nextStep(step) {
        document.getElementById('step' + step).classList.remove('active');
        document.getElementById('step' + (step + 1)).classList.add('active');
    }

 function prevStep(step) {
    if (step > 1) { // Убедимся, что не пытаемся вернуться к шагу 0
        document.getElementById('step' + step).classList.remove('active');
        document.getElementById('step' + (step - 1)).classList.add('active');
    }
}
    function updateStars() {
        totalStars = 0;
        
        // Считаем звезды для выбранных типов работ
        document.querySelectorAll('input[type="checkbox"]:checked').forEach(input => {
            totalStars += parseInt(input.value);
        });
        
        // Считаем звезды для выбранного количества вариантов
        const selectedVariant = document.querySelector('input[name="variants"]:checked');
        if (selectedVariant) {
            totalStars += parseInt(selectedVariant.value);
        }

        // Обновляем отображение...     
        document.getElement  
        document.getElementById('step' + step).classList.add('active');
    }

    function updateStars() {
        const checkboxes = document.querySelectorAll('#step2 input[type="checkbox"]:checked');
        const radioButtons = document.querySelectorAll('#step3 input[type="radio"]:checked');
        const starsFromStep2 = Array.from(checkboxes).reduce((total, checkbox) => total + parseInt(checkbox.value), 0);
        const starsFromStep3 = Array.from(radioButtons).reduce((total, radio) => total + parseInt(radio.value), 0);
        
        totalStars = starsFromStep2 + starsFromStep3; // Добавляем к общему количеству звезд
        document.getElementById('stars').innerText = `${totalStars}`; // Обновляем отображение звезд
    }

    function finishOrder() {
        document.getElementById('step6').classList.remove('active');
        document.getElementById('result').classList.add('active');
    }

    function sendOrder() {
    const orderDetails = `Ваш заказ:\nТип задачи: ${selectedTaskType}\nСложность: ${totalStars}⭐️\nКомментарий: ${document.getElementById('comment').value}\nПодробное ТЗ: ${document.getElementById('detailedTask').value}\nРазмеры: ${document.getElementById('sizes').value}`;

    const chatId = '-1002048923754'; // ID чата
    const messageThreadId = 335; // ID топика
    const token = '6555603364:AAFHuKmI7EFQe7AQeU5rasMdvrs_UWCZB5g'; // Токен бота
    const url = `https://api.telegram.org/bot${token}/sendMessage`;

    fetch(url, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            chat_id: chatId,
            message_thread_id: messageThreadId, // Указание топика
            text: orderDetails,
            parse_mode: 'HTML' // Можно использовать HTML-форматирование, если нужно
        }),
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        if (data.ok) {
            alert("Заказ отправлен!");
        } else {
            alert(`Ошибка: ${data.description}`);
        }
    })
    .catch(error => {
        console.error('Ошибка:', error);
        alert("Ошибка при отправке заказа.");
    });
}


</script>
<script src="https://apis.google.com/js/api.js"></script>
<script>
  let currentStep = 1;
  let totalStars = 0;
  let selectedTaskType = '';

  // Инициализация Google Sheets API
  function initGoogleSheetsAPI() {
    gapi.load('client', () => {
      gapi.client.init({
        apiKey: 'AIzaSyChreK5bihUWqGYHfu66DDqeDskCaodLnc',
        discoveryDocs: ['https://sheets.googleapis.com/$discovery/rest?version=v4'],
      }).then(() => {
        console.log('Google Sheets API initialized');
      }).catch(error => {
        console.error('Error initializing Google Sheets API:', error);
      });
    });
  }

  // Функция для записи данных в Google Таблицу
  function writeToGoogleSheet(data) {
    const sheetId = '1r2h7p-ekOMxoj3oGYmzMfQwrQ1MXepx1YORo-Ozesus'; // ID вашей таблицы
    const range = 'A1'; // Ячейка начала записи данных (например, с первой строки)

    gapi.client.sheets.spreadsheets.values.append({
      spreadsheetId: sheetId,
      range: range,
      valueInputOption: 'RAW',
      resource: {
        values: [data], // Записываем массив данных в таблицу
      },
    }).then(response => {
      console.log('Data successfully written to Google Sheets:', response);
    }).catch(error => {
      console.error('Error writing to Google Sheets:', error);
    });
  }

  function selectTaskType(type, button) {
    selectedTaskType = type;
    document.querySelectorAll('#step1 .square-button').forEach(btn => {
      btn.style.backgroundColor = '#666';
    });
    button.style.backgroundColor = '#2ecc71';
  }

  function nextStep(step) {
    document.getElementById('step' + step).classList.remove('active');
    document.getElementById('step' + (step + 1)).classList.add('active');
  }

  function prevStep(step) {
    if (step > 1) {
      document.getElementById('step' + step).classList.remove('active');
      document.getElementById('step' + (step - 1)).classList.add('active');
    }
  }

  function updateStars() {
    const checkboxes = document.querySelectorAll('#step2 input[type="checkbox"]:checked');
    const radioButtons = document.querySelectorAll('#step3 input[type="radio"]:checked');
    const starsFromStep2 = Array.from(checkboxes).reduce((total, checkbox) => total + parseInt(checkbox.value), 0);
    const starsFromStep3 = Array.from(radioButtons).reduce((total, radio) => total + parseInt(radio.value), 0);
    totalStars = starsFromStep2 + starsFromStep3;
    document.getElementById('stars').innerText = `${totalStars}⭐️`;
  }

  function finishOrder() {
    document.getElementById('step6').classList.remove('active');
    document.getElementById('result').classList.add('active');
  }

  function sendOrder() {
    const comment = document.getElementById('comment').value;
    const detailedTask = document.getElementById('detailedTask').value;
    const sizes = document.getElementById('sizes').value;
    const orderDetails = `Ваш заказ:\nТип задачи: ${selectedTaskType}\nСложность: ${totalStars}⭐️\nКомментарий: ${comment}\nПодробное ТЗ: ${detailedTask}\nРазмеры: ${sizes}`;

    // Отправляем заказ в телеграм
    const chatId = '-1002048923754'; 
    const messageThreadId = 335; 
    const token = '6555603364:AAFHuKmI7EFQe7AQeU5rasMdvrs_UWCZB5g';
    const url = `https://api.telegram.org/bot${token}/sendMessage`;

    fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: chatId,
        message_thread_id: messageThreadId,
        text: orderDetails,
        parse_mode: 'HTML',
      }),
    })
    .then(response => {
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      if (data.ok) {
        alert("Заказ отправлен!");

        // Дублируем данные в Google Таблицу
        const googleSheetData = [selectedTaskType, comment, detailedTask, totalStars, sizes];
        writeToGoogleSheet(googleSheetData);
      } else {
        alert(`Ошибка: ${data.description}`);
      }
    })
    .catch(error => {
      console.error('Ошибка:', error);
      alert("Ошибка при отправке заказа.");
    });
  }

  // Запускаем Google Sheets API при загрузке страницы
  window.onload = function() {
    initGoogleSheetsAPI();
  };
</script>
<style>
    .step {
        display: none;
    }
    .step.active {
        display: block;
    }
    .square-button {
        display: inline-block;
        width: 100px;
        height: 100px;
        background-color: #666;
        color: white;
        border: none;
        cursor: pointer;
        margin: 10px;
        text-align: center;
        line-height: 100px; /* Вертикально центрируем текст */
        font-size: 16px;
    }
    /* Optional: Style for the textarea and input */
    input[type="text"], textarea {
        border: 1px solid #555;
        border-radius: 5px;
    }
</style>
